{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Buy on Amazon Getting Started Product Summary \u00b6 Why jDuck? No need for hours of assembly . Fully assembled and individually tested to ensure excellent working condition right out of the box.. Long time usage and easy charging . The jDuck includes a large power bank, rechargeable lithium-ion battery (10000mAh). Powered by NVIDIA\u00ae Jetson Nano TM 2GB developer kit (sold separately), perfect for learning and teaching AI robotics. Design and assemble in the USA , the product is fully supported. An affordable and friendly platform to deploy many open-source projects on Github for collision avoidance, object recoginition, visioned-based line tracking. With the blooming of artificial intelligence technology in recent years, there is an increased demand in building AI robots for numerous practical applications such as in helping with every day chores or automating more complex and high-level tasks in manufacturing sectors. That attracts a lot of students and enthusiasts to start exploring and learning about AI robotics. Yet, the threshold of creation is quite high. Either the cost could be prohibitive or building a robot from scratch is taking too much time and effort. To address this gap, we provide a reliable and reasonably priced robot to help students and enthusiasts starting their hands-on experience . You build the \u201cbrain\u201d, we got the body. \u00b6 Our jDuck TM robots are fully assembled. Thus, there is no worries about hours of assembly and reading instructions. After taking it out of the box, it\u2019ll take approximately five minutes for you to put your Jetson Nano in place and the robot will be ready. And if you ever wonder how all parts and wires are previously connected, a detailed description is provided on our website. To ensure an excellent working condition right out of the box, products are individually tested. Each of them is quality checked by qualified personnel to eliminate unnecessary troubles so that you can focus on building the \u201cbrain\u201d of your robot. The product includes: Commercially available parts Custom design and 3D-printed parts jDuck components Open-source software developed for NVIDIA\u00ae Jetson Nano 2GB developer Kit \u00b6 The NVIDIA Jetson Nano 2GB Developer Kit (not included in the jDuck) is ideal for teaching, learning, and developing AI and robotics. With an active developer community and ready-to-build open-source projects, you\u2019ll find all the resources you need to get started. It delivers incredible AI performance at a low price and makes the world of AI and robotics accessible to everyone with the exact same NVIDIA software and tools used to create breakthrough AI products across all industries. On this page, our team provides Docker setup and examples to help you jumpstart your AI projects.","title":"Home"},{"location":"index.html#product-summary","text":"Why jDuck? No need for hours of assembly . Fully assembled and individually tested to ensure excellent working condition right out of the box.. Long time usage and easy charging . The jDuck includes a large power bank, rechargeable lithium-ion battery (10000mAh). Powered by NVIDIA\u00ae Jetson Nano TM 2GB developer kit (sold separately), perfect for learning and teaching AI robotics. Design and assemble in the USA , the product is fully supported. An affordable and friendly platform to deploy many open-source projects on Github for collision avoidance, object recoginition, visioned-based line tracking. With the blooming of artificial intelligence technology in recent years, there is an increased demand in building AI robots for numerous practical applications such as in helping with every day chores or automating more complex and high-level tasks in manufacturing sectors. That attracts a lot of students and enthusiasts to start exploring and learning about AI robotics. Yet, the threshold of creation is quite high. Either the cost could be prohibitive or building a robot from scratch is taking too much time and effort. To address this gap, we provide a reliable and reasonably priced robot to help students and enthusiasts starting their hands-on experience .","title":"Product Summary"},{"location":"index.html#you-build-the-brain-we-got-the-body","text":"Our jDuck TM robots are fully assembled. Thus, there is no worries about hours of assembly and reading instructions. After taking it out of the box, it\u2019ll take approximately five minutes for you to put your Jetson Nano in place and the robot will be ready. And if you ever wonder how all parts and wires are previously connected, a detailed description is provided on our website. To ensure an excellent working condition right out of the box, products are individually tested. Each of them is quality checked by qualified personnel to eliminate unnecessary troubles so that you can focus on building the \u201cbrain\u201d of your robot. The product includes: Commercially available parts Custom design and 3D-printed parts jDuck components","title":"You build the \u201cbrain\u201d, we got the body."},{"location":"index.html#open-source-software-developed-for-nvidia-jetson-nano-2gb-developer-kit","text":"The NVIDIA Jetson Nano 2GB Developer Kit (not included in the jDuck) is ideal for teaching, learning, and developing AI and robotics. With an active developer community and ready-to-build open-source projects, you\u2019ll find all the resources you need to get started. It delivers incredible AI performance at a low price and makes the world of AI and robotics accessible to everyone with the exact same NVIDIA software and tools used to create breakthrough AI products across all industries. On this page, our team provides Docker setup and examples to help you jumpstart your AI projects.","title":"Open-source software developed for NVIDIA\u00ae Jetson Nano 2GB developer Kit"},{"location":"hardware_setup/3dprint_settings.html","text":"Slicing software: Cura \u00b6 Settings \u00b6 Basic Parameters Advanced Parameters","title":"3D-print Settings"},{"location":"hardware_setup/3dprint_settings.html#slicing-software-cura","text":"","title":"Slicing software: Cura"},{"location":"hardware_setup/3dprint_settings.html#settings","text":"Basic Parameters Advanced Parameters","title":"Settings"},{"location":"hardware_setup/commercial_parts.html","text":"Common Parts \u00b6 Part Image URL Qty. Need Note Camera Amazon 1 Compatible with NVIDIA Jetson Nano Camera IMX219-160 8-Megapixels Camera Power Bank Amazon 1 Power Bank, LED Display 10000mAh Portable Charger, Dual 3A High-Speed 2 USB Ports Motor Driver Amazon 1 L298N Stepper Motor Driver Controller Board Dual H Bridge Module TT Motor + Wheel Amazon 2 4pcs DC Electric Motor 3-6V Dual Shaft Geared TT Magnetic Gearbox Engine with 4Pcs Plastic Car Tire Wheel Rolling Ball Transfer Amazon 1 1\u201d Rolling Ball Transfers NVIDIA Jetson Nano 2GB * Amazon 1 Series: 945-13541-0000-000 includes usb wifi adapter and cable. Series: 945-13541-0001-000 does not include adapter and cable. MicroSD Card * Amazon 1 128 GB Important Our JeNaBot product does NOT include NVIDIA Jeson Nano 2B and MicroSD Card Wires and Cables \u00b6 Part Image URL Qty. Need Note USB C Amazon 1 Right Angle USB C 1ft USB Type A Amazon 1 USB Type A 2.0 Left Angle Male 9 inches Bolts and Nuts \u00b6 Part Image URL Qty. Need Note M3 x 8mm Amazon 8 Hex Socket Head Cap ,Black Oxide Finish M3 x 10mm Amazon 6 Hex Socket Head Cap ,Black Oxide Finish M3 x 25mm Amazon 9 Pan Head Phillips Machine Screws,18-8 Stainless Steel M3 Nuts Amazon 23 Hex Nut Black Carbon Steel M3 Insert Amazon 4 M3x3.2mmx4.1mm Brass Female Threaded Knurl Insert Embedded Nut Fastener M2 x 12mm Amazon 4 M2 Phillips Round Pan Head M2 x 8mm Amazon 2 M2 Phillips Round Pan Head M2 Nuts Amazon 2 Hexagon Nut, Stainless Steel 304 M2 Brass Insert Amazon 4 M2 Brass Cylindrical Knurled Threaded Insert Embedded Nuts","title":"Commercially Available Parts"},{"location":"hardware_setup/commercial_parts.html#common-parts","text":"Part Image URL Qty. Need Note Camera Amazon 1 Compatible with NVIDIA Jetson Nano Camera IMX219-160 8-Megapixels Camera Power Bank Amazon 1 Power Bank, LED Display 10000mAh Portable Charger, Dual 3A High-Speed 2 USB Ports Motor Driver Amazon 1 L298N Stepper Motor Driver Controller Board Dual H Bridge Module TT Motor + Wheel Amazon 2 4pcs DC Electric Motor 3-6V Dual Shaft Geared TT Magnetic Gearbox Engine with 4Pcs Plastic Car Tire Wheel Rolling Ball Transfer Amazon 1 1\u201d Rolling Ball Transfers NVIDIA Jetson Nano 2GB * Amazon 1 Series: 945-13541-0000-000 includes usb wifi adapter and cable. Series: 945-13541-0001-000 does not include adapter and cable. MicroSD Card * Amazon 1 128 GB Important Our JeNaBot product does NOT include NVIDIA Jeson Nano 2B and MicroSD Card","title":"Common Parts"},{"location":"hardware_setup/commercial_parts.html#wires-and-cables","text":"Part Image URL Qty. Need Note USB C Amazon 1 Right Angle USB C 1ft USB Type A Amazon 1 USB Type A 2.0 Left Angle Male 9 inches","title":"Wires and Cables"},{"location":"hardware_setup/commercial_parts.html#bolts-and-nuts","text":"Part Image URL Qty. Need Note M3 x 8mm Amazon 8 Hex Socket Head Cap ,Black Oxide Finish M3 x 10mm Amazon 6 Hex Socket Head Cap ,Black Oxide Finish M3 x 25mm Amazon 9 Pan Head Phillips Machine Screws,18-8 Stainless Steel M3 Nuts Amazon 23 Hex Nut Black Carbon Steel M3 Insert Amazon 4 M3x3.2mmx4.1mm Brass Female Threaded Knurl Insert Embedded Nut Fastener M2 x 12mm Amazon 4 M2 Phillips Round Pan Head M2 x 8mm Amazon 2 M2 Phillips Round Pan Head M2 Nuts Amazon 2 Hexagon Nut, Stainless Steel 304 M2 Brass Insert Amazon 4 M2 Brass Cylindrical Knurled Threaded Insert Embedded Nuts","title":"Bolts and Nuts"},{"location":"hardware_setup/custom_parts.html","text":"Common parts \u00b6 Part Image Qty. Need Note Motors with wires and connectors 2 Wires were cut to correct size and crimped with ferrule terminals Jetson to Motor Driver Cable 1 Connectors were 3D-printed to custom fit with Jetson headers and Motor Driver 3D-printed parts \u00b6 Part Image Qty. Need Note jDuck Frame 1 Frame Top Cover 1 Top Cover Camera Holder Set 1 Camera holder with adjustable angle Battery Strap 1 Secure the power bank to the bottom frame DC Motor Base 2 Connect DC motors to the bottom frame Spacers 10 Spacers","title":"Custom Built Parts"},{"location":"hardware_setup/custom_parts.html#common-parts","text":"Part Image Qty. Need Note Motors with wires and connectors 2 Wires were cut to correct size and crimped with ferrule terminals Jetson to Motor Driver Cable 1 Connectors were 3D-printed to custom fit with Jetson headers and Motor Driver","title":"Common parts"},{"location":"hardware_setup/custom_parts.html#3d-printed-parts","text":"Part Image Qty. Need Note jDuck Frame 1 Frame Top Cover 1 Top Cover Camera Holder Set 1 Camera holder with adjustable angle Battery Strap 1 Secure the power bank to the bottom frame DC Motor Base 2 Connect DC motors to the bottom frame Spacers 10 Spacers","title":"3D-printed parts"},{"location":"hardware_setup/electrical_wiring.html","text":"L298N Motor Driver \u00b6 This L298N Motor Driver Module is a high power motor driver module for driving DC and Stepper Motors. This module consists of an L298 motor driver IC and a 78M05 5V regulator. L298N Module can control up to 4 DC motors, or 2 DC motors with directional and speed control. L298N pinout NVIDIA\u00ae Jetson Nano TM 2GB Developer Kit \u00b6 The NVIDIA\u00ae Jetson Nano\u2122 2GB Developer Kit is ideal for hands-on projects. Learning by doing is key for anyone new to AI and robotics, and with this developer kit you\u2019ll see your work perceiving and interacting with the world around you in real-time. Getting Started with Jetson Nano 2GB Developer Kit NVIDIA\u00ae Jetson Nano TM 2GB Developer Kit 40-Pin Header (J6) \u00b6 The 40-pin header provides access to power, ground, and interface signal pins. 40-Pin Header (J6) jDuck wiring connection The jDuck only connects 6 pins from J6 to the L298N driver to control the left and right DC motors Left Motor Pin 32 Pin 36 Pin 38 Right Motor Pin 33 Pin 35 Pin 37 More details for software setup to enable PWM on the Jetson Nano is available at Docker: Enable PWM","title":"Electrical Wiring"},{"location":"hardware_setup/electrical_wiring.html#l298n-motor-driver","text":"This L298N Motor Driver Module is a high power motor driver module for driving DC and Stepper Motors. This module consists of an L298 motor driver IC and a 78M05 5V regulator. L298N Module can control up to 4 DC motors, or 2 DC motors with directional and speed control. L298N pinout","title":"L298N Motor Driver"},{"location":"hardware_setup/electrical_wiring.html#nvidia-jetson-nanotm-2gb-developer-kit","text":"The NVIDIA\u00ae Jetson Nano\u2122 2GB Developer Kit is ideal for hands-on projects. Learning by doing is key for anyone new to AI and robotics, and with this developer kit you\u2019ll see your work perceiving and interacting with the world around you in real-time. Getting Started with Jetson Nano 2GB Developer Kit NVIDIA\u00ae Jetson Nano TM 2GB Developer Kit","title":"NVIDIA\u00ae Jetson NanoTM  2GB Developer Kit"},{"location":"hardware_setup/electrical_wiring.html#40-pin-header-j6","text":"The 40-pin header provides access to power, ground, and interface signal pins. 40-Pin Header (J6) jDuck wiring connection The jDuck only connects 6 pins from J6 to the L298N driver to control the left and right DC motors Left Motor Pin 32 Pin 36 Pin 38 Right Motor Pin 33 Pin 35 Pin 37 More details for software setup to enable PWM on the Jetson Nano is available at Docker: Enable PWM","title":"40-Pin Header (J6)"},{"location":"hardware_setup/jduck_hardware_setup.html","text":"Connect CSI camera to Jetson Nano board Connect Motor Driver to Jetson Nano Board Connect USB-C Power Cable Power ON/OFF Connect CSI camera to Jetson Nano board \u00b6 To install a camera module, connect its flex ribbon cable into the camera connector (J5). Follow these steps: Gently lift up the the connector latch on the Jetson Nano board Insert the camera ribbon cable . The metal contacts should face toward the center of the developer kit. Gently press down on the connector latch until stops . This may require two fingers, each at one end of the latch. Do not use excessive force. Connect CSI camera to Jetson Nano FFC Cable Direction Set the metal side of the FFC cable into the heat-sink of the Jetson board Connect Motor Driver to Jetson Nano Board \u00b6 We use 6 pins from J6 header on the Jetson Nano to the L298N driver. Left Motor Right Motor Connection Pins Pin 32 Pin 33 Pin 36 Pin 35 Pin 38 Pin 37 Details for the electrical wiring are available at. Electrical wiring Connect Motor Driver to Jetson Nano Board Motor Driver Connector Set the small side of the ribbon cable connector into the heat-sink of the Jetson board Connect USB-C Power Cable \u00b6 Connect USB-C power cable Power ON/OFF \u00b6 Power ON Click the power button on the power bank to turn ON jDuck. A clear LED digital readout shows the accurate percentage of power level. No more guessing about the remaining power and when to recharge. Power ON Power OFF Double-click the power button on the power bank to turn OFF jDuck. Power OFF","title":"jDuck hardware setup"},{"location":"hardware_setup/jduck_hardware_setup.html#connect-csi-camera-to-jetson-nano-board","text":"To install a camera module, connect its flex ribbon cable into the camera connector (J5). Follow these steps: Gently lift up the the connector latch on the Jetson Nano board Insert the camera ribbon cable . The metal contacts should face toward the center of the developer kit. Gently press down on the connector latch until stops . This may require two fingers, each at one end of the latch. Do not use excessive force. Connect CSI camera to Jetson Nano FFC Cable Direction Set the metal side of the FFC cable into the heat-sink of the Jetson board","title":"Connect CSI camera to Jetson Nano board"},{"location":"hardware_setup/jduck_hardware_setup.html#connect-motor-driver-to-jetson-nano-board","text":"We use 6 pins from J6 header on the Jetson Nano to the L298N driver. Left Motor Right Motor Connection Pins Pin 32 Pin 33 Pin 36 Pin 35 Pin 38 Pin 37 Details for the electrical wiring are available at. Electrical wiring Connect Motor Driver to Jetson Nano Board Motor Driver Connector Set the small side of the ribbon cable connector into the heat-sink of the Jetson board","title":"Connect Motor Driver to Jetson Nano Board"},{"location":"hardware_setup/jduck_hardware_setup.html#connect-usb-c-power-cable","text":"Connect USB-C power cable","title":"Connect USB-C Power Cable"},{"location":"hardware_setup/jduck_hardware_setup.html#power-onoff","text":"Power ON Click the power button on the power bank to turn ON jDuck. A clear LED digital readout shows the accurate percentage of power level. No more guessing about the remaining power and when to recharge. Power ON Power OFF Double-click the power button on the power bank to turn OFF jDuck. Power OFF","title":"Power ON/OFF"},{"location":"reference/CONTRIBUTING.html","text":"Contributing to jetnanobot \u00b6 Thank you for contributing to our jetnanobot repos. Before you proceed, please read the following guidelines Types of submissions \u00b6 You can contribute to this repo and site in several ways. Report a bug Request a new feature Submit a Question/Answer Report a bug \u00b6 If you found a bug in the source code, you can help us by submitting an issue to the issue tracker in our GitHub repository. Even better, you can submit a Pull Request with a fix. However, before doing so, please read the submission guidelines . Request a new Feature \u00b6 You can request a new feature by submitting an issue to our GitHub Repository. If you would like to implement a new feature, please submit an issue with a proposal for your work first. Please consider what kind of change it is: For a major feature , first open an issue and outline your proposal so that it can be discussed. This will also allow us to better coordinate our efforts, prevent duplication of work, and help you to craft the change so that it is successfully accepted into the project. Small features and bugs can be crafted and directly submitted as a Pull Request. However, there is no guarantee that your feature will make it into the master , as it's always a matter of opinion whether if benefits the overall functionality of the project. Join a discussion \u00b6 Discussions are where we have conversations. If you'd like help troubleshooting a docs PR you're working on, have a great new idea, or want to share something amazing you've learned in our docs, join us in discussions . Submission guidelines \u00b6 Submitting an issue \u00b6 Before you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available. We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using the custom issue template. Please stick to the issue template. Unfortunately we are not able to investigate / fix bugs without a minimal reproduction scenario, so if we don't hear back from you we may close the issue. Submitting a Pull Request (PR) \u00b6 Search GitHub for an open or closed PR that relates to your submission. You don't want to duplicate effort. If you do not find a related issue or PR, go ahead. Development : Fork the project, set up the [development environment][4], make your changes in a separate git branch and add descriptive messages to your commits. Build : Before submitting a pull requests, [build the theme][5]. This is a mandatory requirement for your PR to get accepted, as the theme should at all times be installable through GitHub. Pull Request : After building the theme, commit the compiled output, push your branch to GitHub and send a PR to mkdocs-material:master . If we suggest changes, make the required updates, rebase your branch and push the changes to your GitHub repository, which will automatically update your PR. After your PR is merged, you can safely delete your branch and pull the changes from the main (upstream) repository.","title":"Contributing to jetnanobot"},{"location":"reference/CONTRIBUTING.html#contributing-to-jetnanobot","text":"Thank you for contributing to our jetnanobot repos. Before you proceed, please read the following guidelines","title":"Contributing to jetnanobot"},{"location":"reference/CONTRIBUTING.html#types-of-submissions","text":"You can contribute to this repo and site in several ways. Report a bug Request a new feature Submit a Question/Answer","title":"Types of submissions"},{"location":"reference/CONTRIBUTING.html#report-a-bug","text":"If you found a bug in the source code, you can help us by submitting an issue to the issue tracker in our GitHub repository. Even better, you can submit a Pull Request with a fix. However, before doing so, please read the submission guidelines .","title":"Report a bug"},{"location":"reference/CONTRIBUTING.html#request-a-new-feature","text":"You can request a new feature by submitting an issue to our GitHub Repository. If you would like to implement a new feature, please submit an issue with a proposal for your work first. Please consider what kind of change it is: For a major feature , first open an issue and outline your proposal so that it can be discussed. This will also allow us to better coordinate our efforts, prevent duplication of work, and help you to craft the change so that it is successfully accepted into the project. Small features and bugs can be crafted and directly submitted as a Pull Request. However, there is no guarantee that your feature will make it into the master , as it's always a matter of opinion whether if benefits the overall functionality of the project.","title":"Request a new Feature"},{"location":"reference/CONTRIBUTING.html#join-a-discussion","text":"Discussions are where we have conversations. If you'd like help troubleshooting a docs PR you're working on, have a great new idea, or want to share something amazing you've learned in our docs, join us in discussions .","title":"Join a discussion"},{"location":"reference/CONTRIBUTING.html#submission-guidelines","text":"","title":"Submission guidelines"},{"location":"reference/CONTRIBUTING.html#submitting-an-issue","text":"Before you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available. We want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using the custom issue template. Please stick to the issue template. Unfortunately we are not able to investigate / fix bugs without a minimal reproduction scenario, so if we don't hear back from you we may close the issue.","title":"Submitting an issue"},{"location":"reference/CONTRIBUTING.html#submitting-a-pull-request-pr","text":"Search GitHub for an open or closed PR that relates to your submission. You don't want to duplicate effort. If you do not find a related issue or PR, go ahead. Development : Fork the project, set up the [development environment][4], make your changes in a separate git branch and add descriptive messages to your commits. Build : Before submitting a pull requests, [build the theme][5]. This is a mandatory requirement for your PR to get accepted, as the theme should at all times be installable through GitHub. Pull Request : After building the theme, commit the compiled output, push your branch to GitHub and send a PR to mkdocs-material:master . If we suggest changes, make the required updates, rebase your branch and push the changes to your GitHub repository, which will automatically update your PR. After your PR is merged, you can safely delete your branch and pull the changes from the main (upstream) repository.","title":"Submitting a Pull Request (PR)"},{"location":"software_setup/jduck_setup.html","text":"Software setup for jDuck using Docker Container \u00b6 Step1: Clone jduck repos from our github \u00b6 1 git clone http://github.com/luutp/jduck.git Step2: Build and enable Docker containers \u00b6 cd to jduck/Docker directory 1 cd jduck/Docker Docker Directory The contents of the Docker directory is shown as belows: 1 2 3 4 5 6 7 8 9 \ud83d\udce6Docker \u2523 \ud83d\udcc2base \u2523 \ud83d\udcc2enable_pwm \u2523 \ud83d\udcc2jupyter \u2523 \ud83d\udcdcbuild.sh \u2523 \ud83d\udcdcconfigure.sh \u2523 \ud83d\udcdcdisable.sh \u2523 \ud83d\udcdcenable.sh \u2517 \ud83d\udcdcset_nvidia_runtime.sh Build all of the docker containers 1 bash ./build.sh Run all of the docker containers 1 bash ./enable.sh Open jupyterlab from host PC/laptop browser \u00b6 From your host PC/laptop browser, type in the following address: YOUR_JDUCK_IP_ADDRESS:8888/lab? password: jduck Open example Notebooks \u00b6 Go to jduck/notebooks for basic examples that control the robot via control panel or gamepad controller. Docker Tips Once you execute the enable.sh script, the containers are set to restart automatically. This means you can shut down your jDuck, and when you reboot the containers will run and you don't need to repeat this process. To prevent the containers from starting automatically, just call the disable.sh script. 1 2 cd ~/jduck/Docker bash ./disable.sh Run \"docker ps\" to list containers that are currently running. The jduck:pwm and jduck:jupyter containers should be available after step 2. 1 sudo docker ps -a","title":"JDuck Setup"},{"location":"software_setup/jduck_setup.html#software-setup-for-jduck-using-docker-container","text":"","title":"Software setup for jDuck using Docker Container"},{"location":"software_setup/jduck_setup.html#step1-clone-jduck-repos-from-our-github","text":"1 git clone http://github.com/luutp/jduck.git","title":"Step1: Clone jduck repos from our github"},{"location":"software_setup/jduck_setup.html#step2-build-and-enable-docker-containers","text":"cd to jduck/Docker directory 1 cd jduck/Docker Docker Directory The contents of the Docker directory is shown as belows: 1 2 3 4 5 6 7 8 9 \ud83d\udce6Docker \u2523 \ud83d\udcc2base \u2523 \ud83d\udcc2enable_pwm \u2523 \ud83d\udcc2jupyter \u2523 \ud83d\udcdcbuild.sh \u2523 \ud83d\udcdcconfigure.sh \u2523 \ud83d\udcdcdisable.sh \u2523 \ud83d\udcdcenable.sh \u2517 \ud83d\udcdcset_nvidia_runtime.sh Build all of the docker containers 1 bash ./build.sh Run all of the docker containers 1 bash ./enable.sh","title":"Step2: Build and enable Docker containers"},{"location":"software_setup/jduck_setup.html#open-jupyterlab-from-host-pclaptop-browser","text":"From your host PC/laptop browser, type in the following address: YOUR_JDUCK_IP_ADDRESS:8888/lab? password: jduck","title":"Open jupyterlab from host PC/laptop browser"},{"location":"software_setup/jduck_setup.html#open-example-notebooks","text":"Go to jduck/notebooks for basic examples that control the robot via control panel or gamepad controller. Docker Tips Once you execute the enable.sh script, the containers are set to restart automatically. This means you can shut down your jDuck, and when you reboot the containers will run and you don't need to repeat this process. To prevent the containers from starting automatically, just call the disable.sh script. 1 2 cd ~/jduck/Docker bash ./disable.sh Run \"docker ps\" to list containers that are currently running. The jduck:pwm and jduck:jupyter containers should be available after step 2. 1 sudo docker ps -a","title":"Open example Notebooks"},{"location":"software_setup/jetson_nano_setup.html","text":"Getting Started with Jetson Nano 2GB Developer Kit \u00b6 Step 1: Download the Jetson Nano 2GB Developer Kit SD Card Image \u00b6 Download the correct version of the Jetpack SDK image to your laptop or PC. Compatible Jetpack SDK Version The current version of jDuck containers only supports Jetson Nano SD card image flashed with JetPack 4.4.1. These containers will not work with other version of JetPack. The JetPack archive image is available at JetPack SDK 4.4.1 archive Step 2: Write Image to the microSD Card \u00b6 Write Image to the microSD card The instruction for writing the image to microSD card for different type of OS (e.g., Windows, Macos, or Linux) is well-documented on NVIDIA website and can be found at: Write Image to the microSD Card Step 3: Setup and First Boot \u00b6 Setup and First Boot The setup can be done in two ways: With display monitor, keyboard, and mouse attached Headless mode via remote control from another computer Detailed instruction is available at: Setup and First Boot We would recommend method 1 since it is straight forward. Morever, the wifi connection and obtaining IP address after the first boot is very simple.","title":"Jetson Nano Setup"},{"location":"software_setup/jetson_nano_setup.html#getting-started-with-jetson-nano-2gb-developer-kit","text":"","title":"Getting Started with Jetson Nano 2GB Developer Kit"},{"location":"software_setup/jetson_nano_setup.html#step-1-download-the-jetson-nano-2gb-developer-kit-sd-card-image","text":"Download the correct version of the Jetpack SDK image to your laptop or PC. Compatible Jetpack SDK Version The current version of jDuck containers only supports Jetson Nano SD card image flashed with JetPack 4.4.1. These containers will not work with other version of JetPack. The JetPack archive image is available at JetPack SDK 4.4.1 archive","title":"Step 1: Download the Jetson Nano 2GB Developer Kit SD Card Image"},{"location":"software_setup/jetson_nano_setup.html#step-2-write-image-to-the-microsd-card","text":"Write Image to the microSD card The instruction for writing the image to microSD card for different type of OS (e.g., Windows, Macos, or Linux) is well-documented on NVIDIA website and can be found at: Write Image to the microSD Card","title":"Step 2: Write Image to the microSD Card"},{"location":"software_setup/jetson_nano_setup.html#step-3-setup-and-first-boot","text":"Setup and First Boot The setup can be done in two ways: With display monitor, keyboard, and mouse attached Headless mode via remote control from another computer Detailed instruction is available at: Setup and First Boot We would recommend method 1 since it is straight forward. Morever, the wifi connection and obtaining IP address after the first boot is very simple.","title":"Step 3: Setup and First Boot"}]}